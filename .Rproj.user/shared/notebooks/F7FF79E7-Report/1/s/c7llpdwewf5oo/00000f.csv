"0","# ---- Inline summaries + simple diagnostics (no Wald tests) ----"
"0","# install.packages(c(""broom"",""lmtest"",""sandwich"",""car""))"
"0","library(broom); library(lmtest); library(sandwich); library(car)"
"0",""
"0","# Helper to format percent effects and significance stars from fixest models"
"0","fmt_eff <- function(mod, var, scale = 100, stat_cols = c(""Pr(>|t|)"", ""Pr(>|z|)"")) {"
"0","  ct <- tryCatch(summary(mod)$coeftable, error = function(e) NULL)"
"0","  if (is.null(ct) || !(var %in% rownames(ct))) return(list(pct = ""n/a"", stars = """"))"
"0","  b <- ct[var, ""Estimate""]"
"0","  p_col <- intersect(colnames(ct), stat_cols)"
"0","  p <- if (length(p_col)) ct[var, p_col[1]] else NA_real_"
"0","  stars <- if (is.na(p)) """" else if (p < 0.01) ""***"" else if (p < 0.05) ""**"" else if (p < 0.1) ""*"" else """""
"0","  list(pct = sprintf(""%.1f"", scale * b), stars = stars)"
"0","}"
"0",""
"0","# --- Pull effects used in the prose (semi-elasticities ~ 100*beta) ---"
"0","e1 <- fmt_eff(m_intdisp_fe, ""events_flood"")          # flood -> internal displacement"
"0","e2 <- fmt_eff(m_intdisp_fe, ""events_hurricane"")      # hurricane -> internal displacement"
"0","e3 <- fmt_eff(m_asylum_fe,   ""lag_drought_events"")   # lagged drought -> asylum"
"0",""
"0","flood_intdisp_pct  <- e1$pct"
"0","flood_intdisp_sig  <- e1$stars"
"0","hurr_intdisp_pct   <- e2$pct"
"0","hurr_intdisp_sig   <- e2$stars"
"0","drought_asylum_pct <- e3$pct"
"0","drought_asylum_sig <- e3$stars"
"0",""
"0","# --- Brief blurbs for PPML and intensity robustness (no tests, just significance flags) ---"
"0","ppml_intdisp_brief <- {"
"0","  ct <- try(summary(m_intdisp_ppml)$coeftable, silent = TRUE)"
"0","  if (inherits(ct, ""try-error"")) ""PPML not estimated"""
"0","  else {"
"0","    sf <- if (""events_flood""     %in% rownames(ct)) (ct[""events_flood"",     ""Pr(>|z|)""] < 0.1) else FALSE"
"0","    sh <- if (""events_hurricane"" %in% rownames(ct)) (ct[""events_hurricane"", ""Pr(>|z|)""] < 0.1) else FALSE"
"0","    paste0(""flood ("", if (sf) ""sig"" else ""n.s."", ""), hurricane ("", if (sh) ""sig"" else ""n.s."", "")"")"
"0","  }"
"0","}"
"0",""
"0","ppml_asylum_brief <- {"
"0","  ct <- try(summary(m_asylum_ppml)$coeftable, silent = TRUE)"
"0","  if (inherits(ct, ""try-error"")) ""PPML not estimated"""
"0","  else {"
"0","    sd <- if (""lag_drought_events"" %in% rownames(ct)) (ct[""lag_drought_events"", ""Pr(>|z|)""] < 0.1) else FALSE"
"0","    paste0(""lagged drought ("", if (sd) ""sig"" else ""n.s."", "")"")"
"0","  }"
"0","}"
"0",""
"0","intensity_brief <- {"
"0","  ct <- try(summary(m_asylum_intensity)$coeftable, silent = TRUE)"
"0","  if (inherits(ct, ""try-error"")) ""Intensity model not estimated"""
"0","  else {"
"0","    sf <- if (""affected_flood_pc""     %in% rownames(ct)) (ct[""affected_flood_pc"",     ""Pr(>|t|)""] < 0.1) else FALSE"
"0","    sh <- if (""affected_hurricane_pc"" %in% rownames(ct)) (ct[""affected_hurricane_pc"", ""Pr(>|t|)""] < 0.1) else FALSE"
"0","    paste0(""affected flood pc ("", if (sf) ""sig"" else ""n.s."", ""), affected hurricane pc ("", if (sh) ""sig"" else ""n.s."", "")"")"
"0","  }"
"0","}"
"0",""
"0","# --- Light diagnostics (preview) ---"
"0","# Pooled OLS preview for heteroskedasticity and VIF (FE models already use clustered SEs)"
"0","ols_prev <- try(lm("
"0","  log1p(asylum_apps) ~ lag_drought_events + events_flood + events_hurricane +"
"0","    log1p(gdp_pc_const) + agri_va_pct + unemp_rate + remit_gdp_pct + gini_index,"
"0","  data = df"
"0","), silent = TRUE)"
"0",""
"0","bp_p_txt <- if (inherits(ols_prev, ""try-error"")) {"
"0","  ""p = n/a"""
"0","} else {"
"0","  p <- try(bptest(ols_prev)$p.value, silent = TRUE)"
"0","  if (inherits(p, ""try-error"") || is.na(p)) ""p = n/a"" else paste0(""p = "", format.pval(p, digits = 3))"
"0","}"
"0",""
"0","vif_max_txt <- if (inherits(ols_prev, ""try-error"")) {"
"0","  ""n/a"""
"0","} else {"
"0","  v <- try(car::vif(ols_prev), silent = TRUE)"
"0","  if (inherits(v, ""try-error"")) ""n/a"" else sprintf(""%.2f"", max(v, na.rm = TRUE))"
"0","}"
"0",""
"0","# (Optional) Print a tiny diagnostics summary to the console/log"
"0","data.frame("
"0","  Check = c(""Breuschâ€“Pagan (pooled preview) p-value"", ""Max VIF (pooled preview)""),"
"0","  Value = c(bp_p_txt, vif_max_txt)"
"0",") %>% print(row.names = FALSE)"
